# .github/workflows/ci-cd.yml
name: CI-CD

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main]

jobs:
# ──────────────────────────────  TEST  ────────────────────────────── #
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [18, 20]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm

      - name: Create .env.test
        run: |
          echo "JWT_SECRET=testSecret" > .env.test
          echo "PORT=4000"            >> .env.test

      - run: npm ci

      - run: npm run lint

      - name: Unit tests
        run: npm test
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}

      - name: Check vulnerabilities
        run: npm audit --production --audit-level=moderate

# ───────────────────────────── DEPLOY ─────────────────────────────── #
  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: ${{ github.ref == 'refs/heads/main' && needs.test.result == 'success' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - run: npm ci --omit=dev

      # === Ejemplo para Vercel (ajusta a tu plataforma) === #
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token:  ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: .
          vercel-args: '--prod --confirm'